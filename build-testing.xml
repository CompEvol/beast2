<project basedir="." default="test-all" name="BEAST 2 Unit Tests"
	xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <description>
        Simplified build script for running unit tests only.
        Not for producing releases.
    </description>

    <!-- set global properties for this build -->
    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="lib" location="lib" />
    <property name="doc" location="doc" />
    <property name="dist" location="build/dist" />
    <property name="test" location="test" />

    <property name="main_class_BEASTLauncher" value="beast.app.beastapp.BeastLauncher" />
    <property name="report" value="build/junitreport" />

    <path id="classpath">
        <fileset dir="${lib}" includes="beagle.jar"/>
        <fileset dir="${lib}" includes="jam.jar"/>
        <fileset dir="${lib}" includes="colt.jar"/>
        <fileset dir="${lib}" includes="fest.jar"/>
        <fileset dir="${lib}" includes="antlr-runtime-4.10.1.jar"/>
        <fileset dir="${lib}" includes="commons-math3-3.6.1.jar" />

        <path location="build"/>

        <fileset dir="${lib}/junit" includes="junit-platform-console-standalone-1.8.2.jar"/>
    </path>



    <target name="init">
        <echo message="${ant.project.name}: ${ant.file}" />
    </target>

    <target name="clean">
        <delete dir="${build}" />
    </target>

    <!-- compile Java source code -->
    <!-- compile Java source code -->
    <target name="compile-all" depends="init,beast.pkgmgmt,beast.base,test.beast">
        <echo>Building BEAST 2</echo>
        <!--
        <mkdir dir="${build}" />

        <javac source="1.8"
		target="1.8"
		bootclasspath='/opt/jdk1.8.0_131/jre/lib/rt.jar'
               srcdir="${src}"
               destdir="${build}"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/**/**" />
            <include name="org/**/**" />
            <include name="test/beast/**" />
        </javac>

        <echo message="Ant running on Java version ${ant.java.version}"/>

        <delete file="${build}/beast/app/beauti/BeautiLauncher.class" />
        <delete file="${build}/beast/app/tools/AppLauncherLauncher.class" />
        <delete file="${build}/beast/app/tools/LogCombinerLauncher.class" />
        <delete file="${build}/beast/app/treeannotator/TreeAnnotatorLauncher.class" />
        <delete file="${build}/beast/app/util/Utils6.class" />
        <delete file="${build}/beast/app/BEASTVersion.class" />
        <delete file="${build}/beast/util/BEASTClassLoader.class" />
    	
        <delete file="${build}/beast/app/util/Version.class" />
        <javac source="1.6"
               target="1.6"
               bootclasspath='/opt/jdk1.6.0_45/jre/lib/rt.jar'
               srcdir="${src}"
               destdir="${build}"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/**/*Launcher.java" />
            <include name="beast/**/Utils6.java" />
            <include name="beast/**/BEASTVersion.java" />
            <include name="beast/**/Version.java" />
            <include name="beast/util/Package*.java" />
            <include name="beast/app/util/Arguments.java" />
            <include name="beast/core/util/Log.java" />
	    <include name="beast/util/BEASTClassLoader.java" />
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.properties" />
            <fileset dir="${src}" includes="**/*.png" />
        </copy>
        -->
        <echo message="Successfully compiled." />
    </target>

    <target name="beast.pkgmgmt" depends="init">
        <mkdir dir="${build}" />
    	<javac 
               srcdir="src"
               destdir="build"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/pkgmgmt/**/**" />
        </javac>
                
        <jar jarfile="build/dist/launcher.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>

            	
            <fileset dir="${build}">
                <include name="beast/pkgmgmt/**/*.class" />
                <include name="beast/pkgmgmt/**/*.properties" />
                <include name="beast/pkgmgmt/**/*.png" />
            </fileset>
        </jar>
    </target>


    <target name="beast.base" depends="init">
    	<javac 
               srcdir="src"
               destdir="build"
               classpathref="classpath"
               fork="true"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
            <include name="beast/base/**/**" />
            <include name="org/**/**" />
        </javac>
                
        <jar jarfile="build/dist/BEAST.base.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
            	
            <fileset dir="${build}">
                <include name="org/**/*.class" />
                <include name="beast/base/**/*.class" />
                <include name="beast/base/**/*.properties" />
                <include name="beast/base/**/*.png" />
            </fileset>
            <zipgroupfileset dir="${lib}" includes="jam.jar" />
            <zipgroupfileset dir="${lib}" includes="beagle.jar" />
            <zipgroupfileset dir="${lib}" includes="colt.jar" />
            <zipgroupfileset dir="${lib}" includes="antlr-runtime-4.10.1.jar"/>
	        <zipgroupfileset dir="${lib}" includes="commons-math3-3.6.1.jar" />
        </jar>
    </target>



    <target name="test.beast" depends="init">
    	<javac 
               srcdir="test"
               destdir="build"
               fork="true"
               classpathref="classpath"
               memoryinitialsize="256m"
               memorymaximumsize="1024m"
               includeAntRuntime='false'>
               
               <classpath>
                <path id="assertj-without-test-beast.classpath">
			        <fileset dir="${lib}/junit" includes="assertj-swing-junit-3.17.1.jar"/>
				    <fileset dir="${lib}/junit" includes="assertj-core-3.20.2.jar"/>
				    <fileset dir="${lib}/junit" includes="assertj-swing-3.17.1.jar"/>
                </path>
               </classpath>
            <include name="test/**/**" />
        </javac>
                
        <jar jarfile="build/dist/test.beast.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
            <fileset dir="${build}">
                <include name="test/beast/**/*.class" />
                <include name="test/beast/**/*.properties" />
                <include name="test/beast/**/*.png" />
            </fileset>
        </jar>
    </target>    
    
    

    
    <!-- JUnit test -->
    <target name="junit" depends="junit-unit, junit-integration, junit-xmlparsertest"/>

    <target name="junit-unit">
        <pathconvert property="classpathProp" refid="classpath"/>
        <echo>Classpath is ${classpathProp}</echo>

        <java classpathref="classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <arg line="-p test.beast.base"/>
            <arg line="-p test.beast.core"/>
            <arg line="-p test.beast.evolution"/>
            <arg line="-p test.beast.math"/>
            <arg line="-p test.beast.statistic"/>
            <arg line="-p test.beast.util"/>
            <arg line="-N test.beast.util.XMLParserTest"/>
            <arg line="--reports-dir build/junitreport"/>
        </java>
        <junitreport todir="build/junitreport">
            <fileset dir="build/junitreport">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="build/junitreport"/>
        </junitreport>
    </target>
	
	<!-- separate out test.beast.util.XMLParserTest so the version.xml files get loaded -->
    <target name="junit-xmlparsertest">
        <java classpathref="classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <arg line="-c test.beast.util.XMLParserTest"/>
            <arg line="--reports-dir build/xmlparserreport"/>
        </java>
        <junitreport todir="build/xmlparserreport">
            <fileset dir="build/xmlparserreport">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="build/xmlparserreport"/>
        </junitreport>
    </target>
    
    <target name="junit-integration">
        <java classpathref="classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <arg line="-p test.beast.integration"/>
            <arg line="--reports-dir build/integrationreport"/>
        </java>
        <junitreport todir="build/integrationreport">
            <fileset dir="build/junitreport">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="build/integrationreport"/>
        </junitreport>
    </target>

    <target name="junitreport">
        <junitreport todir="${report}">
            <fileset dir="${report}" includes="*.xml" />
            <report format="frames" todir="${report}" />
        </junitreport>
        <echo message="JUnit test report finished." />
    </target>

    <!-- Target for Travis-CI with non-zero exit status on test failure. -->
    <target name="travis" depends="clean, compile-all, junit, junitb">
        <fail if="junitfailed" message="One or more CORE BEAST tests failed."/>
        <fail if="junitbfailed" message="One or more BEAUTI tests failed."/>
    </target>

    <!-- testing beauti gui-->
    <target name="junitb">
        <mkdir dir="${report}" />
        <junit printsummary="yes" failureproperty="junitbfailed" dir="/beast2/">
            <!--showoutput='yes'-->
            <classpath>
                <path id="assertj.classpath">
			        <fileset dir="/beast2/${lib}" includes="junit-4.8.2.jar"/>
        			<fileset dir="/beast2/${lib}" includes="beagle.jar"/>
			        <fileset dir="/beast2/${lib}" includes="jam.jar"/>
			        <fileset dir="/beast2/${lib}" includes="colt.jar"/>
			        <fileset dir="/beast2/${lib}" includes="fest.jar"/>
			        <fileset dir="/beast2/${lib}" includes="antlr-runtime-4.10.1.jar"/>
			        <fileset dir="/beast2/build/dist" includes="BEAST.base.jar" />
			        <fileset dir="/beast2/build/dist" includes="BEAST.app.jar" />
			        <fileset dir="/beast2/build/dist" includes="launcher.jar" />
			        <fileset dir="/beast2/build/dist" includes="test.beast.jar" />
			        <fileset dir="/beast2/${lib}/junit" includes="assertj-swing-junit-3.17.1.jar"/>
				    <fileset dir="/beast2/${lib}/junit" includes="assertj-core-3.20.2.jar"/>
				    <fileset dir="/beast2/${lib}/junit" includes="assertj-swing-3.17.1.jar"/>
                </path>
                <!--
                <path location="${build}" />
                -->
            </classpath>

            <formatter type="xml" />

            <batchtest fork="yes" todir="${report}">
                <fileset dir="test.beast/src">
                    <include name="test/beast/app/beauti/**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <echo message="JUnit test finished." />
    </target>
    

    <!-- Target for CI testing with non-zero exit status on test failure. -->
    <target name="test-all" depends="clean, compile-all, junit, junitb">
        <fail if="junitfailed" message="One or more CORE BEAST tests failed."/>
        <fail if="junitbfailed" message="One or more BEAUTI tests failed."/>
    </target>

    <target name="test-core" depends="clean, compile-all, junit">
        <fail if="junitfailed" message="One or more CORE BEAST tests failed."/>
    </target>

    <target name="test-beauti" depends="clean, compile-all, junitb">
        <fail if="junitbfailed" message="One or more BEAUTI tests failed."/>
    </target>


  </project>
